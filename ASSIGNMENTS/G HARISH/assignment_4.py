# -*- coding: utf-8 -*-
"""assignment-4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/198MgQZ_x2hd_JaWIWSUlQq_xGH79gomj
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

df = pd.read_csv('/content/abalone.csv')

df.head()

df.describe()

sns.heatmap(df.isnull())

df.info()

numerical_features

categorical_features

plt.figure(figsize = (20,7))
sns.heatmap(df[numerical_features].corr(),annot = True)

sns.countplot(x = 'Sex', data = df, palette = 'Set3')

plt.figure(figsize = (20,7))
sns.swarmplot(x = 'Sex', y = 'age', data = df, hue = 'Sex')
sns.violinplot(x = 'Sex', y = 'age',data = df)

df = pd.get_dummies(df)
dummy_df = df

#viscera weight
var = 'Viscera weight'
plt.scatter(x = df[var], y = df['age'])
plt.grid(True)

#shell weight
var = 'Shell weight'
plt.scatter(x = df[var], y = df['age'])
plt.grid(True)

#shucked weight
var = 'Shucked weight'
plt.scatter(x = df[var], y = df['age'])
plt.grid(True)

#whole weight
var = 'Whole weight'
plt.scatter(x = df[var], y = df['age'])
plt.grid(True)

#diameter
var = 'Diameter'
plt.scatter(x = df[var], y = df['age'])
plt.grid(True)

#height
var = 'Height'
plt.scatter(x = df[var], y = df['age'])
plt.grid(True)

#length
var = 'Length'
plt.scatter(x = df[var], y = df['age'])
plt.grid(True)

#independent scale

x=df.iloc[:, 0:1]
x

#dependent variable

y=df.iloc[:,1:]
y

#Train the Model, Test the Model, split
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

x_train.shape

x_test.shape

x_test

y_train.shape

y_test.shape

"""model of building"""

# Build the Model
from sklearn.linear_model import linearRegression
slr=LinearRegression()
slr.fit(x_train,y_train)

x_test

y_test

#descriptive statistics
df.describe()

#multple 
df=pd.read_csv('/content/abalone.csv')
df.head()

df.tail()